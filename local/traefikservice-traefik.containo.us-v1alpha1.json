{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "description": "TraefikService is the CRD implementation of a Traefik Service. TraefikService object allows to: - Apply weight to Services on load-balancing - Mirror traffic on services More info: https://doc.traefik.io/traefik/v2.9/routing/providers/kubernetes-crd/#kind-traefikservice",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "enum": [
        "traefik.containo.us/v1alpha1"
      ],
      "type": [
        "string",
        "null"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "enum": [
        "TraefikService"
      ],
      "type": [
        "string",
        "null"
      ]
    },
    "metadata": {
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
    },
    "spec": {
      "description": "TraefikServiceSpec defines the desired state of a TraefikService.",
      "properties": {
        "mirroring": {
          "description": "Mirroring defines the Mirroring service configuration.",
          "properties": {
            "kind": {
              "description": "Kind defines the kind of the Service.",
              "enum": [
                "Service",
                "TraefikService"
              ],
              "type": [
                "string",
                "null"
              ]
            },
            "maxBodySize": {
              "description": "MaxBodySize defines the maximum size allowed for the body of the request. If the body is larger, the request is not mirrored. Default value is -1, which means unlimited size.",
              "format": "int64",
              "type": [
                "integer",
                "null"
              ]
            },
            "mirrors": {
              "description": "Mirrors defines the list of mirrors where Traefik will duplicate the traffic.",
              "items": {
                "description": "MirrorService holds the mirror configuration.",
                "properties": {
                  "kind": {
                    "description": "Kind defines the kind of the Service.",
                    "enum": [
                      "Service",
                      "TraefikService"
                    ],
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "name": {
                    "description": "Name defines the name of the referenced Kubernetes Service or TraefikService. The differentiation between the two is specified in the Kind field.",
                    "type": "string"
                  },
                  "namespace": {
                    "description": "Namespace defines the namespace of the referenced Kubernetes Service or TraefikService.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "passHostHeader": {
                    "description": "PassHostHeader defines whether the client Host header is forwarded to the upstream Kubernetes Service. By default, passHostHeader is true.",
                    "type": [
                      "boolean",
                      "null"
                    ]
                  },
                  "percent": {
                    "description": "Percent defines the part of the traffic to mirror. Supported values: 0 to 100.",
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "port": {
                    "description": "Port defines the port of a Kubernetes Service. This can be a reference to a named port.",
                    "x-kubernetes-int-or-string": true
                  },
                  "responseForwarding": {
                    "description": "ResponseForwarding defines how Traefik forwards the response from the upstream Kubernetes Service to the client.",
                    "properties": {
                      "flushInterval": {
                        "description": "FlushInterval defines the interval, in milliseconds, in between flushes to the client while copying the response body. A negative value means to flush immediately after each write to the client. This configuration is ignored when ReverseProxy recognizes a response as a streaming response; for such responses, writes are flushed to the client immediately. Default: 100ms",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "type": [
                      "object",
                      "null"
                    ]
                  },
                  "scheme": {
                    "description": "Scheme defines the scheme to use for the request to the upstream Kubernetes Service. It defaults to https when Kubernetes Service port is 443, http otherwise.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "serversTransport": {
                    "description": "ServersTransport defines the name of ServersTransport resource to use. It allows to configure the transport between Traefik and your servers. Can only be used on a Kubernetes Service.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "sticky": {
                    "description": "Sticky defines the sticky sessions configuration. More info: https://doc.traefik.io/traefik/v2.9/routing/services/#sticky-sessions",
                    "properties": {
                      "cookie": {
                        "description": "Cookie defines the sticky cookie configuration.",
                        "properties": {
                          "httpOnly": {
                            "description": "HTTPOnly defines whether the cookie can be accessed by client-side APIs, such as JavaScript.",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          },
                          "name": {
                            "description": "Name defines the Cookie name.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "sameSite": {
                            "description": "SameSite defines the same site policy. More info: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "secure": {
                            "description": "Secure defines whether the cookie can only be transmitted over an encrypted connection (i.e. HTTPS).",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          }
                        },
                        "type": [
                          "object",
                          "null"
                        ]
                      }
                    },
                    "type": [
                      "object",
                      "null"
                    ]
                  },
                  "strategy": {
                    "description": "Strategy defines the load balancing strategy between the servers. RoundRobin is the only supported value at the moment.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "weight": {
                    "description": "Weight defines the weight and should only be specified when Name references a TraefikService object (and to be precise, one that embeds a Weighted Round Robin).",
                    "type": [
                      "integer",
                      "null"
                    ]
                  }
                },
                "required": [
                  "name"
                ],
                "type": [
                  "object",
                  "null"
                ]
              },
              "type": [
                "array",
                "null"
              ]
            },
            "name": {
              "description": "Name defines the name of the referenced Kubernetes Service or TraefikService. The differentiation between the two is specified in the Kind field.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace defines the namespace of the referenced Kubernetes Service or TraefikService.",
              "type": [
                "string",
                "null"
              ]
            },
            "passHostHeader": {
              "description": "PassHostHeader defines whether the client Host header is forwarded to the upstream Kubernetes Service. By default, passHostHeader is true.",
              "type": [
                "boolean",
                "null"
              ]
            },
            "port": {
              "description": "Port defines the port of a Kubernetes Service. This can be a reference to a named port.",
              "x-kubernetes-int-or-string": true
            },
            "responseForwarding": {
              "description": "ResponseForwarding defines how Traefik forwards the response from the upstream Kubernetes Service to the client.",
              "properties": {
                "flushInterval": {
                  "description": "FlushInterval defines the interval, in milliseconds, in between flushes to the client while copying the response body. A negative value means to flush immediately after each write to the client. This configuration is ignored when ReverseProxy recognizes a response as a streaming response; for such responses, writes are flushed to the client immediately. Default: 100ms",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "type": [
                "object",
                "null"
              ]
            },
            "scheme": {
              "description": "Scheme defines the scheme to use for the request to the upstream Kubernetes Service. It defaults to https when Kubernetes Service port is 443, http otherwise.",
              "type": [
                "string",
                "null"
              ]
            },
            "serversTransport": {
              "description": "ServersTransport defines the name of ServersTransport resource to use. It allows to configure the transport between Traefik and your servers. Can only be used on a Kubernetes Service.",
              "type": [
                "string",
                "null"
              ]
            },
            "sticky": {
              "description": "Sticky defines the sticky sessions configuration. More info: https://doc.traefik.io/traefik/v2.9/routing/services/#sticky-sessions",
              "properties": {
                "cookie": {
                  "description": "Cookie defines the sticky cookie configuration.",
                  "properties": {
                    "httpOnly": {
                      "description": "HTTPOnly defines whether the cookie can be accessed by client-side APIs, such as JavaScript.",
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "name": {
                      "description": "Name defines the Cookie name.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "sameSite": {
                      "description": "SameSite defines the same site policy. More info: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "secure": {
                      "description": "Secure defines whether the cookie can only be transmitted over an encrypted connection (i.e. HTTPS).",
                      "type": [
                        "boolean",
                        "null"
                      ]
                    }
                  },
                  "type": [
                    "object",
                    "null"
                  ]
                }
              },
              "type": [
                "object",
                "null"
              ]
            },
            "strategy": {
              "description": "Strategy defines the load balancing strategy between the servers. RoundRobin is the only supported value at the moment.",
              "type": [
                "string",
                "null"
              ]
            },
            "weight": {
              "description": "Weight defines the weight and should only be specified when Name references a TraefikService object (and to be precise, one that embeds a Weighted Round Robin).",
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "required": [
            "name"
          ],
          "type": [
            "object",
            "null"
          ]
        },
        "weighted": {
          "description": "Weighted defines the Weighted Round Robin configuration.",
          "properties": {
            "services": {
              "description": "Services defines the list of Kubernetes Service and/or TraefikService to load-balance, with weight.",
              "items": {
                "description": "Service defines an upstream HTTP service to proxy traffic to.",
                "properties": {
                  "kind": {
                    "description": "Kind defines the kind of the Service.",
                    "enum": [
                      "Service",
                      "TraefikService"
                    ],
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "name": {
                    "description": "Name defines the name of the referenced Kubernetes Service or TraefikService. The differentiation between the two is specified in the Kind field.",
                    "type": "string"
                  },
                  "namespace": {
                    "description": "Namespace defines the namespace of the referenced Kubernetes Service or TraefikService.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "passHostHeader": {
                    "description": "PassHostHeader defines whether the client Host header is forwarded to the upstream Kubernetes Service. By default, passHostHeader is true.",
                    "type": [
                      "boolean",
                      "null"
                    ]
                  },
                  "port": {
                    "description": "Port defines the port of a Kubernetes Service. This can be a reference to a named port.",
                    "x-kubernetes-int-or-string": true
                  },
                  "responseForwarding": {
                    "description": "ResponseForwarding defines how Traefik forwards the response from the upstream Kubernetes Service to the client.",
                    "properties": {
                      "flushInterval": {
                        "description": "FlushInterval defines the interval, in milliseconds, in between flushes to the client while copying the response body. A negative value means to flush immediately after each write to the client. This configuration is ignored when ReverseProxy recognizes a response as a streaming response; for such responses, writes are flushed to the client immediately. Default: 100ms",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "type": [
                      "object",
                      "null"
                    ]
                  },
                  "scheme": {
                    "description": "Scheme defines the scheme to use for the request to the upstream Kubernetes Service. It defaults to https when Kubernetes Service port is 443, http otherwise.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "serversTransport": {
                    "description": "ServersTransport defines the name of ServersTransport resource to use. It allows to configure the transport between Traefik and your servers. Can only be used on a Kubernetes Service.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "sticky": {
                    "description": "Sticky defines the sticky sessions configuration. More info: https://doc.traefik.io/traefik/v2.9/routing/services/#sticky-sessions",
                    "properties": {
                      "cookie": {
                        "description": "Cookie defines the sticky cookie configuration.",
                        "properties": {
                          "httpOnly": {
                            "description": "HTTPOnly defines whether the cookie can be accessed by client-side APIs, such as JavaScript.",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          },
                          "name": {
                            "description": "Name defines the Cookie name.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "sameSite": {
                            "description": "SameSite defines the same site policy. More info: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "secure": {
                            "description": "Secure defines whether the cookie can only be transmitted over an encrypted connection (i.e. HTTPS).",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          }
                        },
                        "type": [
                          "object",
                          "null"
                        ]
                      }
                    },
                    "type": [
                      "object",
                      "null"
                    ]
                  },
                  "strategy": {
                    "description": "Strategy defines the load balancing strategy between the servers. RoundRobin is the only supported value at the moment.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "weight": {
                    "description": "Weight defines the weight and should only be specified when Name references a TraefikService object (and to be precise, one that embeds a Weighted Round Robin).",
                    "type": [
                      "integer",
                      "null"
                    ]
                  }
                },
                "required": [
                  "name"
                ],
                "type": [
                  "object",
                  "null"
                ]
              },
              "type": [
                "array",
                "null"
              ]
            },
            "sticky": {
              "description": "Sticky defines whether sticky sessions are enabled. More info: https://doc.traefik.io/traefik/v2.9/routing/providers/kubernetes-crd/#stickiness-and-load-balancing",
              "properties": {
                "cookie": {
                  "description": "Cookie defines the sticky cookie configuration.",
                  "properties": {
                    "httpOnly": {
                      "description": "HTTPOnly defines whether the cookie can be accessed by client-side APIs, such as JavaScript.",
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "name": {
                      "description": "Name defines the Cookie name.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "sameSite": {
                      "description": "SameSite defines the same site policy. More info: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "secure": {
                      "description": "Secure defines whether the cookie can only be transmitted over an encrypted connection (i.e. HTTPS).",
                      "type": [
                        "boolean",
                        "null"
                      ]
                    }
                  },
                  "type": [
                    "object",
                    "null"
                  ]
                }
              },
              "type": [
                "object",
                "null"
              ]
            }
          },
          "type": [
            "object",
            "null"
          ]
        }
      },
      "type": [
        "object",
        "null"
      ]
    }
  },
  "required": [
    "metadata",
    "spec"
  ],
  "type": "object",
  "x-kubernetes-group-version-kind": [
    {
      "group": "traefik.containo.us",
      "kind": "TraefikService",
      "version": "v1alpha1"
    }
  ]
}
