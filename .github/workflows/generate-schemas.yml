# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: "Generate schemas"

on:
  workflow_call:
    inputs:
      k3s-version:
        type: "string"
        required: true

permissions: {}

jobs:
  generate-schemas:
    name: "Generate schemas"
    runs-on: "ubuntu-latest"
    permissions:
      contents: "read"
    env:
      K3S_VERSION: "${{ inputs.k3s-version }}"
    steps:
      - name: "Checkout"
        uses: "actions/checkout@d632683dd7b4114ad314bca15554477dd762a938"
        with:
          fetch-depth: 1
          persist-credentials: false
      - name: "Generate schemas"
        run: |
          ./scripts/generate-schemas.sh
      - name: "Upload schemas artifact"
        uses: "actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874"
        with:
          name: "schemas-${{ inputs.k3s-version }}"
          path: "./schemas/"
          retention-days: 1

  publish-schemas:
    name: "Publish schemas"
    needs: ["generate-schemas"]
    if: >-
      github.ref_name == github.event.repository.default_branch
        && contains(fromJSON('["schedule", "workflow_dispatch"]'), github.event_name)
    runs-on: "ubuntu-latest"
    permissions:
      contents: "write"
    env:
      K3S_VERSION: "${{ inputs.k3s-version }}"
      GIT_DIR: "./git/"
      GIT_WORK_TREE: "./schemas/"
      GIT_REMOTE: "https://oauth2:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git"
    steps:
      - name: "Download schemas artifact"
        uses: "actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16"
        with:
          name: "schemas-${{ inputs.k3s-version }}"
          path: "./schemas/"
      - name: "Publish schemas"
        run: |
          git config --global user.name '~'
          git config --global user.email 'noreply@molinero.dev'
          mkdir "${GIT_DIR:?}" && env -u GIT_WORK_TREE git init --bare
          git remote add origin "${GIT_REMOTE:?}"
          git switch --orphan "schemas/${K3S_VERSION:?}"
          git add --all && git commit --allow-empty-message --message ''
          git push origin --force "schemas/${K3S_VERSION:?}"
